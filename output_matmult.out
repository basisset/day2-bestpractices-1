Wrote profile results to matmult.py.lprof
Timer unit: 1e-06 s

Total time: 0.20454 s
File: matmult.py
Function: makeX at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def makeX():
    13         1          5.0      5.0      0.0      X = []
    14       251        134.0      0.5      0.1      for i in range(N):
    15       250     204401.0    817.6     99.9          X.append([random.randint(0,100) for r in range(N)])
    16         1          0.0      0.0      0.0      return X

Total time: 0.20114 s
File: matmult.py
Function: makeY at line 20

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    20                                           @profile
    21                                           def makeY():
    22         1          1.0      1.0      0.0      Y = []
    23       251        114.0      0.5      0.1      for i in range(N):
    24       250     201025.0    804.1     99.9          Y.append([random.randint(0,100) for r in range(N+1)])
    25         1          0.0      0.0      0.0      return Y

Total time: 0.001667 s
File: matmult.py
Function: appending_results at line 29

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    29                                           @profile
    30                                           def appending_results():
    31         1          1.0      1.0      0.1      result = []
    32       251         61.0      0.2      3.7      for i in range(N):
    33       250       1604.0      6.4     96.2          result.append([0] * (N+1))
    34         1          1.0      1.0      0.1      return result
    35                                               # iterate through rows of X
    36                                           
    37                                               ### This segment takes the most time at about 13.3487 s
    38                                               ### 41 MiB
    39                                               ### There is probably a smarter way to multiply X and Y
    40                                               ### and since these lines takes the longest then I would start modifying here

Total time: 13.0007 s
File: matmult.py
Function: final_calc at line 41

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    41                                           @profile
    42                                           def final_calc(X,Y):
    43       251         66.0      0.3      0.0      for i in range(len(X)):
    44                                               # iterate through columns of Y
    45     63000      15833.0      0.3      0.1          for j in range(len(Y[0])):
    46                                                       # iterate through rows of Y
    47  15750250    4061335.0      0.3     31.2              for k in range(len(Y)):
    48  15687500    8923432.0      0.6     68.6                  result[i][j] += X[i][k] * Y[k][j]
    49         1          0.0      0.0      0.0      return result

